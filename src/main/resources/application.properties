

#vehicleBusiness测试库
spring.datasource.primary.url=jdbc:sqlserver://server.bontor.cn:10042;DatabaseName=Fixed_vehicle_business
spring.datasource.primary.username=sa
spring.datasource.primary.password=qwe123$%RT
spring.datasource.primary.driverClassName=com.microsoft.sqlserver.jdbc.SQLServerDriver

spring.datasource.secondary.url=jdbc:sqlserver://server.bontor.cn:10042;DatabaseName=FixedEnv
spring.datasource.secondary.username=sa
spring.datasource.secondary.password=qwe123$%RT
spring.datasource.secondary.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver




#vehicleBusiness数据库
#vehicleBusiness.datasource.url=jdbc:sqlserver://192.168.0.179:1433;DatabaseName=Fixed_vehicle_business
#vehicleBusiness.datasource.username=sa
#vehicleBusiness.datasource.password=Detect123
#vehicleBusiness.datasource.driverClassName=com.microsoft.sqlserver.jdbc.SQLServerDriver

#spring.jpa.properties.hibernate.hbm2ddl.auto是hibernate的配置属性
#create：每次加载hibernate时都会删除上一次的生成的表，然后根据你的model类再重新来生成新表，哪怕两次没有任何改变也要这样执行，这就是导致数据库表数据丢失的一个重要原因。
#create-drop：每次加载hibernate时根据model类生成表，但是sessionFactory一关闭,表就自动删除。
#update：最常用的属性，第一次加载hibernate时根据model类会自动建立起表的结构（前提是先建立好数据库），以后加载hibernate时根据model类自动更新表结构，即使表结构改变了但表中的行仍然存在不会删除以前的行。要注意的是当部署到服务器后，表结构是不会被马上建立起来的，是要等应用第一次运行起来后才会。
#validate：每次加载hibernate时，验证创建数据库表结构，只会和数据库中的表进行比较，不会创建新表，但是会插入新值。
spring.jpa.properties.hibernate.hbm2ddl.auto = validate
spring.jpa.show-sql=true
spring.jackson.serialization.indent-output=true

spring.jpa.hibernate.naming.physical-strategy = org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

server.port=9090